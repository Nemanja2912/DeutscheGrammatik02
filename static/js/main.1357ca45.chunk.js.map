{"version":3,"sources":["assets/img/asset1.svg","assets/img/asset2.svg","UI/Indicator.jsx","game1/BallsGroup.jsx","UI/DetailsBox.jsx","hook/useMove.jsx","UI/DragElement.jsx","game1/SecondPartBox.jsx","UI/BarCircle.jsx","UI/InfoOverlay.jsx","UI/HelpOverlay.jsx","UI/StatusBar.jsx","game1/Game1.jsx","App.js","index.js"],"names":["Indicator","active","wrong","useState","animationStart","setAnimationStart","useEffect","setTimeout","position","left","top","transform","zIndex","height","width","backgroundColor","borderRadius","display","alignItems","justifyContent","padding","pointerEvents","transition","opacity","ReactDOM","createPortal","className","style","viewBox","fill","xmlns","clipPath","d","id","document","querySelector","ACTION_TYPE","moveReduce","state","action","newState","type","payload","move","x","y","animate","BallsGroup","refList","containerIndex","blueDropRef","verbID1","verbID2","list","lineOpacity","returnDone","index","lineIndex","secondPart","returnBallPos","helpMove","moveFinger","level","setLevel","setHelpMove","initState","showAnimationList","i","length","useReducer","moveState","dispatchMove","complete","withDelay","isDone","setIsDone","showAnimation","setShowAnimation","indicator","setIndicator","verbRef","useRef","transitionDuration","prev","current","getBoundingClientRect","containerStyle","initX1","initY1","bottom","initX2","initY2","widthMove","offsetWidth","resultX1","resultY1","resultX2","resultY2","setTransition","showList","line","word","map","wordObj","onMouseDown","e","initEvent","verbInterval","changePosition","resetElement","id1","id2","moveElement","multiply","parseFloat","setInterval","mouseMove","event","clientX","clientY","addEventListener","mouseUp","endEvent","removeEventListener","blueDropStyle","secondElementID","checkIsElementInDropArea","cursorEvent","container","right","clearInterval","getBlueDropPoint","initX","initY","x1","y1","changeResultX1","x2","y2","changeResultX2","handleMove","ref","text","DetailsBox","children","detailsBoxStyle","lineHeight","boxShadow","color","fontSize","pointerStyle","margin","useMove","leftPos","target","topPos","eventEnd","DragElement","dropRef","returnState","customClass","elementState","words","SecondPartBox","lineRefs","hide","setHide","ende","setEnde","setHideStatus","status","arr","j","isEnd","useMemo","BarCircle","detailsText","onClick","circleStyle","fontWeight","cursor","setLeftPos","show","setShow","boxRef","customCircleStyle","setCustomCircleStyle","onMouseMove","onMouseOut","InfoOverlay","closeFunc","animateOverlay","setAnimateOverlay","customBoxStyle","setCustomBoxStyle","customCloseStyle","setCustomCloseStyle","handleClose","marginBottom","marginLeft","HelpOverlay","pos","closeOverlay","window","innerWidth","customSvgStyle","setCustomSvgStyle","undefined","transitionTimingFunction","StatusBar","infoText","infoOverlay","setInfoOverlay","setHelpOverlay","helpFingerPosition","showInfo","setShowInfo","showHelp","setShowHelp","gap","textList","verbs","Number","Game1","leftDropArea","centerDropArea","rightDropArea","opacityList","setOpacityList","setSecondPart","setInfoText","helpOverlay","setHelpFingerPosition","setBallPos","item","src","Image","alt","Image2","App","navButtonRef","createRef","setAttribute","firstElementChild","zoom","render"],"mappings":"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","file":"static/js/main.1357ca45.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/asset1.efdcc200.svg\";","export default __webpack_public_path__ + \"static/media/asset2.5fd47f2f.svg\";","import { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Indicator = ({ active = false, wrong = false }) => {\r\n  const [animationStart, setAnimationStart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAnimationStart(active);\r\n    }, 0);\r\n  }, [active]);\r\n\r\n  let Indicator = {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: `translate(-50%, -50%) ${\r\n      animationStart ? \"scale(1.5)\" : \"scale(1)\"\r\n    }`,\r\n    zIndex: \"10000\",\r\n    height: \"150px\",\r\n    width: \"150px\",\r\n    backgroundColor: wrong ? \"#EB8336\" : \"#a0c814\",\r\n    borderRadius: \"50%\",\r\n    display: active ? \"flex\" : \"none\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: \"50px\",\r\n    pointerEvents: \"none\",\r\n    transition: \"1s\",\r\n    opacity: animationStart ? 0 : 1,\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"Indicator\" style={Indicator}>\r\n      {wrong ? (\r\n        <svg\r\n          width=\"352\"\r\n          height=\"512\"\r\n          viewBox=\"0 0 352 512\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g clipPath=\"url(#clip0_165:2)\">\r\n            <path\r\n              d=\"M242.72 256L342.79 155.93C355.07 143.65 355.07 123.74 342.79 111.45L320.55 89.21C308.27 76.93 288.36 76.93 276.07 89.21L176 189.28L75.93 89.21C63.65 76.93 43.74 76.93 31.45 89.21L9.21 111.45C-3.07 123.73 -3.07 143.64 9.21 155.93L109.28 256L9.21 356.07C-3.07 368.35 -3.07 388.26 9.21 400.55L31.45 422.79C43.73 435.07 63.65 435.07 75.93 422.79L176 322.72L276.07 422.79C288.35 435.07 308.27 435.07 320.55 422.79L342.79 400.55C355.07 388.27 355.07 368.36 342.79 356.07L242.72 256Z\"\r\n              fill=\"white\"\r\n            />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0_165:2\">\r\n              <rect width=\"352\" height=\"512\" fill=\"white\" />\r\n            </clipPath>\r\n          </defs>\r\n        </svg>\r\n      ) : (\r\n        <svg\r\n          width=\"512\"\r\n          height=\"382\"\r\n          viewBox=\"0 0 512 382\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M173.898 374.404L7.49799 208.004C-2.49901 198.007 -2.49901 181.798 7.49799 171.8L43.701 135.596C53.698 125.598 69.908 125.598 79.905 135.596L192 247.69L432.095 7.596C442.092 -2.401 458.302 -2.401 468.299 7.596L504.502 43.8C514.499 53.797 514.499 70.006 504.502 80.004L210.102 374.405C200.104 384.402 183.895 384.402 173.898 374.404Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      )}\r\n    </div>,\r\n    document.querySelector(\"#indicator\")\r\n  );\r\n};\r\n\r\nexport default Indicator;\r\n","import { useState, useEffect, useRef, useReducer } from \"react\";\r\nimport Indicator from \"../UI/Indicator\";\r\n\r\nlet ACTION_TYPE = {\r\n  MOVE: \"MOVE\",\r\n  RESET: \"RESET\",\r\n  TRANSITION: \"TRANSITION\",\r\n};\r\n\r\nlet moveReduce = (state, action) => {\r\n  let newState;\r\n  switch (action.type) {\r\n    case ACTION_TYPE.MOVE:\r\n      newState = {\r\n        ...state,\r\n      };\r\n\r\n      newState[action.payload.id] = {\r\n        ...newState[action.payload.id],\r\n        move: true,\r\n        x: action.payload.x,\r\n        y: action.payload.y,\r\n        zIndex: action.payload.zIndex ? action.payload.zIndex : 300,\r\n        animate: action.payload.animate ? action.payload.animate : \"\",\r\n      };\r\n      break;\r\n    case ACTION_TYPE.RESET:\r\n      newState = {\r\n        ...state,\r\n      };\r\n\r\n      newState[action.payload.id] = {\r\n        ...newState[action.payload.id],\r\n        move: false,\r\n        x: 0,\r\n        y: 0,\r\n        transition: action.payload.transition,\r\n        zIndex: 1,\r\n      };\r\n      break;\r\n    case ACTION_TYPE.TRANSITION:\r\n      newState = {\r\n        ...state,\r\n      };\r\n\r\n      newState[action.payload.id] = {\r\n        ...newState[action.payload.id],\r\n        transition: action.payload.transition,\r\n      };\r\n\r\n      break;\r\n    default:\r\n      newState = state;\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nconst BallsGroup = ({\r\n  refList,\r\n  containerIndex,\r\n  blueDropRef,\r\n  verbID1,\r\n  verbID2,\r\n  list,\r\n  lineOpacity,\r\n  returnDone,\r\n  index,\r\n  lineIndex,\r\n  secondPart,\r\n  returnBallPos,\r\n  helpMove,\r\n  moveFinger,\r\n  level,\r\n  setLevel,\r\n  setHelpMove,\r\n}) => {\r\n  let initState = [];\r\n\r\n  for (let index in list) {\r\n    initState[index] = {\r\n      move: false,\r\n      x: 0,\r\n      y: 0,\r\n      transition: 0,\r\n      zIndex: 1,\r\n      animate: \"\",\r\n    };\r\n  }\r\n\r\n  let showAnimationList = [];\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    showAnimationList[i] = false;\r\n  }\r\n\r\n  const [moveState, dispatchMove] = useReducer(moveReduce, initState);\r\n  const [isDone, setIsDone] = useState({ complete: false, withDelay: false });\r\n  const [showAnimation, setShowAnimation] = useState(showAnimationList);\r\n  const [indicator, setIndicator] = useState({\r\n    active: false,\r\n    wrong: false,\r\n  });\r\n\r\n  const verbRef = [\r\n    useRef(null),\r\n    useRef(null),\r\n    useRef(null),\r\n    useRef(null),\r\n    useRef(null),\r\n  ];\r\n\r\n  let transitionDuration = 200;\r\n\r\n  useEffect(() => {\r\n    returnBallPos((prev) => {\r\n      let list = [...prev];\r\n      list[index] = [\r\n        verbRef[verbID1].current.getBoundingClientRect().left,\r\n        verbRef[verbID1].current.getBoundingClientRect().top,\r\n      ];\r\n\r\n      return list;\r\n    });\r\n  }, [moveState, index, returnBallPos, verbID1]);\r\n\r\n  useEffect(() => {\r\n    if (!helpMove || level !== index) return;\r\n    const containerStyle =\r\n      refList[containerIndex].current.getBoundingClientRect();\r\n    let initX1 = verbRef[verbID1].current.getBoundingClientRect().left;\r\n    let initY1 = verbRef[verbID1].current.getBoundingClientRect().bottom;\r\n    let initX2 = verbRef[verbID2].current.getBoundingClientRect().left;\r\n    let initY2 = verbRef[verbID2].current.getBoundingClientRect().bottom;\r\n\r\n    let widthMove = verbRef[verbID1].current.offsetWidth;\r\n\r\n    let resultX1 =\r\n      containerStyle.left - initX1 + (containerStyle.width / 2 - widthMove);\r\n    let resultY1 = containerStyle.bottom - initY1 - widthMove * lineIndex;\r\n\r\n    let resultX2 = containerStyle.left - initX2 + containerStyle.width / 2;\r\n    let resultY2 = containerStyle.bottom - initY2 - widthMove * lineIndex;\r\n\r\n    moveFinger([initX1 + 35, initY1 - 35]);\r\n\r\n    setTimeout(() => {\r\n      setTransition(verbID2, 200);\r\n\r\n      dispatchMove({\r\n        type: ACTION_TYPE.MOVE,\r\n        payload: {\r\n          id: verbID2,\r\n          x: initX1 - initX2 + widthMove,\r\n          y: 0,\r\n          zIndex: 1000,\r\n        },\r\n      });\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      setTransition(verbID1, 1000);\r\n      setTransition(verbID2, 1000);\r\n\r\n      moveFinger([\r\n        containerStyle.left + (containerStyle.width / 2 - widthMove / 2 - 10),\r\n        containerStyle.bottom - widthMove / 2 - widthMove * lineIndex,\r\n      ]);\r\n\r\n      dispatchMove({\r\n        type: ACTION_TYPE.MOVE,\r\n        payload: {\r\n          id: verbID1,\r\n          x: resultX1,\r\n          y: resultY1,\r\n          zIndex: 1000,\r\n        },\r\n      });\r\n\r\n      dispatchMove({\r\n        type: ACTION_TYPE.MOVE,\r\n        payload: {\r\n          id: verbID2,\r\n          x: resultX2,\r\n          y: resultY2,\r\n          zIndex: 1000,\r\n        },\r\n      });\r\n      setLevel((prev) => prev + 1);\r\n\r\n      setTimeout(() => {\r\n        setIndicator((prev) => {\r\n          return { ...prev, active: true, wrong: false };\r\n        });\r\n      }, 1500);\r\n\r\n      setTimeout(() => {\r\n        moveFinger(\"init\");\r\n        let showList = [];\r\n        for (let i in list) {\r\n          setTransition(i, transitionDuration);\r\n\r\n          if (+i === verbID1 || +i === verbID2) {\r\n            showList[i] = true;\r\n          } else {\r\n            showList[i] = false;\r\n          }\r\n        }\r\n        setShowAnimation(showList);\r\n\r\n        setTimeout(() => {\r\n          returnDone({ line: false }, index + 1);\r\n          setHelpMove(false);\r\n        }, 500);\r\n\r\n        setTimeout(() => {\r\n          moveFinger(false);\r\n        }, 0);\r\n      }, 1500);\r\n    }, 1200);\r\n  }, [helpMove]);\r\n\r\n  useEffect(() => {\r\n    if (isDone.complete && isDone.withDelay) {\r\n      setTimeout(() => {\r\n        setIndicator({ active: true, wrong: false });\r\n\r\n        setTimeout(() => {\r\n          setIndicator((prev) => {\r\n            return { ...prev, active: false };\r\n          });\r\n        }, 1000);\r\n        returnDone({ line: false, word: true }, index);\r\n\r\n        let showList = [];\r\n        for (let i in list) {\r\n          setTransition(i, transitionDuration);\r\n\r\n          if (+i === verbID1 || +i === verbID2) {\r\n            showList[i] = true;\r\n          } else {\r\n            showList[i] = false;\r\n          }\r\n        }\r\n        setShowAnimation(showList);\r\n\r\n        setTimeout(() => {\r\n          returnDone({ line: false }, index + 1);\r\n        }, 500);\r\n      }, 5600);\r\n    } else if (isDone.complete && !isDone.withDelay) {\r\n      setIndicator({ active: true, wrong: false });\r\n\r\n      setTimeout(() => {\r\n        setIndicator((prev) => {\r\n          return { ...prev, active: false };\r\n        });\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        returnDone({ line: false, word: true }, index);\r\n\r\n        let showList = [];\r\n        for (let i in list) {\r\n          setTransition(i, transitionDuration);\r\n\r\n          if (+i === verbID1 || +i === verbID2) {\r\n            showList[i] = true;\r\n          } else {\r\n            showList[i] = false;\r\n          }\r\n        }\r\n        setShowAnimation(showList);\r\n\r\n        setTimeout(() => {\r\n          returnDone({ line: false }, index + 1);\r\n        }, 500);\r\n      }, transitionDuration);\r\n    }\r\n  }, [isDone]);\r\n\r\n  useEffect(() => {\r\n    if (!lineOpacity) {\r\n      let showList = [];\r\n      for (let i in list) {\r\n        setTransition(i, transitionDuration);\r\n\r\n        showList[i] = true;\r\n      }\r\n      setShowAnimation(showList);\r\n    }\r\n  }, [lineOpacity]);\r\n\r\n  // Set Transition\r\n  const setTransition = (id, transition) => {\r\n    dispatchMove({\r\n      type: ACTION_TYPE.TRANSITION,\r\n      payload: {\r\n        id,\r\n        transition,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleMove = (initEvent, id) => {\r\n    if (isDone.complete) return;\r\n\r\n    setTransition(id, 0);\r\n\r\n    let verbInterval;\r\n    let initX1;\r\n    let initX2;\r\n    let initY1;\r\n    let initY2;\r\n    let widthMove = verbRef[verbID1].current.offsetWidth;\r\n\r\n    // Move func\r\n\r\n    const changePosition = (\r\n      index = id,\r\n      x,\r\n      y,\r\n      transition = \"\",\r\n      zIndex = false,\r\n      animate = \"\"\r\n    ) => {\r\n      dispatchMove({\r\n        type: ACTION_TYPE.MOVE,\r\n        payload: {\r\n          id: index,\r\n          x,\r\n          y,\r\n          transition,\r\n          zIndex,\r\n          animate,\r\n        },\r\n      });\r\n    };\r\n\r\n    // Reset\r\n    const resetElement = (transition, identificator = id) => {\r\n      dispatchMove({\r\n        type: ACTION_TYPE.RESET,\r\n        payload: {\r\n          id: identificator,\r\n          transition,\r\n        },\r\n      });\r\n\r\n      setIndicator({ active: true, wrong: true });\r\n\r\n      setTimeout(() => {\r\n        setIndicator((prev) => {\r\n          return { ...prev, active: false };\r\n        });\r\n      }, 1000);\r\n    };\r\n\r\n    if (id === verbID1 || id === verbID2) {\r\n      let id1 = id === verbID1 ? verbID1 : verbID2;\r\n      let id2 = id === verbID1 ? verbID2 : verbID1;\r\n\r\n      initX1 = verbRef[verbID1].current.getBoundingClientRect().left;\r\n      initX2 = verbRef[verbID2].current.getBoundingClientRect().left;\r\n      initY1 = verbRef[verbID1].current.getBoundingClientRect().bottom;\r\n      initY2 = verbRef[verbID2].current.getBoundingClientRect().bottom;\r\n\r\n      setTransition(id2, 100);\r\n\r\n      const moveElement = () => {\r\n        let multiply = id === verbID1 ? 1 : -1;\r\n\r\n        let x =\r\n          verbRef[id1].current.getBoundingClientRect().left -\r\n          verbRef[id2].current.getBoundingClientRect().left +\r\n          widthMove * multiply +\r\n          parseFloat(verbRef[id2].current.style.left);\r\n        let y = parseFloat(verbRef[id1].current.style.top);\r\n\r\n        changePosition(id2, x, y, \"\", 299);\r\n      };\r\n\r\n      moveElement();\r\n\r\n      verbInterval = setInterval(() => {\r\n        moveElement();\r\n      }, 100);\r\n    }\r\n\r\n    const mouseMove = (event) => {\r\n      let x = event.clientX - initEvent.clientX + moveState[id].x;\r\n      let y = event.clientY - initEvent.clientY + moveState[id].y;\r\n\r\n      changePosition(id, x, y);\r\n    };\r\n\r\n    document.addEventListener(\"mousemove\", mouseMove);\r\n\r\n    const mouseUp = (endEvent) => {\r\n      document.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n      if (id !== verbID1 && id !== verbID2) {\r\n        resetElement(transitionDuration);\r\n        setTimeout(() => {\r\n          resetElement(0);\r\n        }, transitionDuration);\r\n      } else {\r\n        const containerStyle =\r\n          refList[containerIndex].current.getBoundingClientRect();\r\n        const blueDropStyle = blueDropRef.current.getBoundingClientRect();\r\n        const secondElementID = id === verbID1 ? verbID2 : 1;\r\n\r\n        let resultX1 =\r\n          containerStyle.left - initX1 + (containerStyle.width / 2 - widthMove);\r\n        let resultY1 = containerStyle.bottom - initY1;\r\n\r\n        let resultX2 = containerStyle.left - initX2 + containerStyle.width / 2;\r\n        let resultY2 = containerStyle.bottom - initY2;\r\n\r\n        const checkIsElementInDropArea = (cursorEvent, container) => {\r\n          return (\r\n            cursorEvent.clientX > container.left &&\r\n            cursorEvent.clientX < container.right &&\r\n            cursorEvent.clientY > container.top &&\r\n            cursorEvent.clientY < container.bottom\r\n          );\r\n        };\r\n\r\n        if (checkIsElementInDropArea(endEvent, containerStyle)) {\r\n          setIsDone({ complete: true, withDelay: false });\r\n          clearInterval(verbInterval);\r\n          setTransition(id, transitionDuration);\r\n\r\n          //Left Element\r\n          changePosition(verbID1, resultX1, resultY1 - widthMove * lineIndex);\r\n\r\n          //   Right Element\r\n          changePosition(verbID2, resultX2, resultY2 - widthMove * lineIndex);\r\n        } else if (checkIsElementInDropArea(endEvent, blueDropStyle)) {\r\n          setIsDone({ complete: true, withDelay: true });\r\n          clearInterval(verbInterval);\r\n          setTransition(verbID1, 1000);\r\n\r\n          const getBlueDropPoint = (initX, initY) => {\r\n            let x;\r\n            let y = blueDropStyle.bottom - initY;\r\n\r\n            if (containerIndex === 0) {\r\n              x = blueDropStyle.left - initX - 15;\r\n            } else if (containerIndex === 1) {\r\n              x =\r\n                blueDropStyle.left +\r\n                blueDropStyle.width / 2 -\r\n                widthMove / 2 -\r\n                initX;\r\n            } else if (containerIndex === 2) {\r\n              x = blueDropStyle.right - initX - 40;\r\n            }\r\n\r\n            return [x, y];\r\n          };\r\n\r\n          const [x1, y1] = getBlueDropPoint(initX1, initY1);\r\n\r\n          changePosition(verbID1, x1, y1, \"\", 1);\r\n\r\n          setTimeout(() => {\r\n            let y1 = containerStyle.top - initY1;\r\n            let zIndex = 200;\r\n            let changeResultX1 = resultX1;\r\n            let animate = \"rotate\";\r\n\r\n            if (containerIndex === 1) {\r\n              changeResultX1 =\r\n                containerStyle.left -\r\n                initX1 +\r\n                (containerStyle.width / 2 - widthMove / 2);\r\n\r\n              zIndex = 300;\r\n              animate = \"spin\";\r\n            } else if (containerIndex === 2) {\r\n              y1 -= 30;\r\n\r\n              animate = \"reverse-rotate\";\r\n            }\r\n\r\n            changePosition(verbID1, changeResultX1, y1, \"\", zIndex, animate);\r\n\r\n            setTimeout(() => {\r\n              setTransition(verbID1, 300);\r\n              changePosition(\r\n                verbID1,\r\n                resultX1,\r\n                resultY1 - widthMove * lineIndex\r\n              );\r\n\r\n              setTimeout(() => {\r\n                setTransition(verbID2, 1000);\r\n\r\n                const [x2, y2] = getBlueDropPoint(initX2, initY2);\r\n\r\n                changePosition(verbID2, x2, y2, \"\", 1);\r\n\r\n                setTimeout(() => {\r\n                  let y2 = containerStyle.top - initY2 - 30;\r\n                  let changeResultX2 = resultX2;\r\n                  if (containerIndex === 1) {\r\n                    changeResultX2 =\r\n                      containerStyle.left -\r\n                      initX2 +\r\n                      (containerStyle.width / 2 - widthMove / 2);\r\n                  } else if (containerIndex === 2) {\r\n                    y1 += 30;\r\n\r\n                    animate = \"reverse-rotate\";\r\n                  }\r\n\r\n                  changePosition(\r\n                    verbID2,\r\n                    changeResultX2,\r\n                    y2,\r\n                    \"\",\r\n                    zIndex,\r\n                    animate\r\n                  );\r\n\r\n                  setTimeout(() => {\r\n                    setTransition(verbID2, 300);\r\n\r\n                    changePosition(\r\n                      verbID2,\r\n                      resultX2,\r\n                      resultY2 - widthMove * lineIndex\r\n                    );\r\n                  }, 1000);\r\n                }, 1000);\r\n              }, 1000);\r\n            }, 1000);\r\n          }, 1000);\r\n        } else {\r\n          clearInterval(verbInterval);\r\n          resetElement(transitionDuration);\r\n          resetElement(transitionDuration, secondElementID);\r\n\r\n          setTimeout(() => {\r\n            resetElement(0);\r\n            resetElement(0, secondElementID);\r\n          }, transitionDuration);\r\n        }\r\n      }\r\n\r\n      document.removeEventListener(\"mouseup\", mouseUp);\r\n    };\r\n\r\n    document.addEventListener(\"mouseup\", mouseUp);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`balls ${lineOpacity ? \"opacity\" : \"\"} ${\r\n          secondPart ? \"secondPart-ball\" : \"\"\r\n        }`}\r\n      >\r\n        {list.map((wordObj, index) => (\r\n          <figure\r\n            className={`ball ${showAnimation[index] ? \"show\" : \"\"} ${\r\n              moveState[index].animate\r\n            } `}\r\n            style={{\r\n              left: moveState[index].x,\r\n              top: moveState[index].y,\r\n              transitionDuration: `${moveState[index].transition}ms`,\r\n              zIndex: moveState[index].zIndex,\r\n            }}\r\n            onMouseDown={(e) => handleMove(e, index)}\r\n            key={index}\r\n            ref={verbRef[index] !== \"\" ? verbRef[index] : null}\r\n          >\r\n            <span className=\"shadow\"></span>\r\n            {containerIndex === 1 &&\r\n              (index === verbID1 || index === verbID2) && (\r\n                <p className=\"fake-text\">{wordObj.text}</p>\r\n              )}\r\n            <div className=\"text\">{wordObj.text}</div>\r\n          </figure>\r\n        ))}\r\n      </div>\r\n      <Indicator active={indicator.active} wrong={indicator.wrong} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BallsGroup;\r\n","const DetailsBox = ({ children, width = 160, backgroundColor = \"#a0c814\" }) => {\r\n  let detailsBoxStyle = {\r\n    backgroundColor: backgroundColor,\r\n    width: width,\r\n    lineHeight: \"20px\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.16) 0px 1px 4px\",\r\n    borderRadius: \"5px\",\r\n    padding: 10,\r\n    color: \"#fff\",\r\n    fontSize: 14,\r\n  };\r\n\r\n  let pointerStyle = {\r\n    height: 20,\r\n    width: 20,\r\n    backgroundColor: backgroundColor,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    bottom: -10,\r\n    margin: \"auto\",\r\n    transform: \"rotate(45deg)\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"details-box\" style={detailsBoxStyle}>\r\n      {children}\r\n      <div className=\"pointer\" style={pointerStyle}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsBox;\r\n","import { useReducer, useState } from \"react\";\r\n\r\nlet initState = {\r\n  x: 0,\r\n  y: 0,\r\n  transition: 0,\r\n  zIndex: 1,\r\n};\r\n\r\nlet ACTION_TYPE = {\r\n  MOVE: \"MOVE\",\r\n  TRANSITION: \"TRANSITION\",\r\n  RESET: \"RESET\",\r\n  CUSTOM: \"CUSTOM\",\r\n};\r\n\r\nlet moveReduce = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.MOVE:\r\n      return {\r\n        ...state,\r\n        x: action.payload.x,\r\n        y: action.payload.y,\r\n        zIndex: 200,\r\n      };\r\n    case ACTION_TYPE.TRANSITION:\r\n      return {\r\n        ...state,\r\n        transition: action.payload.transition,\r\n      };\r\n    case ACTION_TYPE.RESET:\r\n      return {\r\n        ...state,\r\n        x: 0,\r\n        y: 0,\r\n        transition: action.payload.transition,\r\n        zIndex: 1,\r\n      };\r\n    case ACTION_TYPE.CUSTOM:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useMove = (ref = false, transitionDuration = 200) => {\r\n  const [moveState, dispatchMove] = useReducer(moveReduce, initState);\r\n  const [isDone, setIsDone] = useState(false);\r\n  const [indicator, setIndicator] = useState({ active: false, wrong: false });\r\n\r\n  const setTransition = (transition) => {\r\n    dispatchMove({\r\n      type: ACTION_TYPE.TRANSITION,\r\n      payload: {\r\n        transition: transition,\r\n      },\r\n    });\r\n  };\r\n\r\n  const moveElement = (x, y) => {\r\n    dispatchMove({\r\n      type: ACTION_TYPE.MOVE,\r\n      payload: {\r\n        x,\r\n        y,\r\n      },\r\n    });\r\n  };\r\n\r\n  const resetElement = (transition) => {\r\n    setIndicator({ active: true, wrong: true });\r\n\r\n    setTimeout(() => {\r\n      setIndicator((prev) => {\r\n        return { ...prev, active: false };\r\n      });\r\n    }, 1000);\r\n    dispatchMove({\r\n      type: ACTION_TYPE.RESET,\r\n      payload: {\r\n        transition: transition,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleMove = (initEvent) => {\r\n    if (isDone) return;\r\n\r\n    setTransition(0);\r\n\r\n    let leftPos = initEvent.target.getBoundingClientRect().left;\r\n    let topPos = initEvent.target.getBoundingClientRect().top;\r\n\r\n    const mouseMove = (event) => {\r\n      let x = event.clientX - initEvent.clientX + moveState.x;\r\n      let y = event.clientY - initEvent.clientY + moveState.y;\r\n\r\n      moveElement(x, y);\r\n    };\r\n    document.addEventListener(\"mousemove\", mouseMove);\r\n\r\n    const mouseUp = (eventEnd) => {\r\n      document.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n      if (\r\n        ref &&\r\n        eventEnd.clientX > ref.current.getBoundingClientRect().left &&\r\n        eventEnd.clientX < ref.current.getBoundingClientRect().right &&\r\n        eventEnd.clientY > ref.current.getBoundingClientRect().top &&\r\n        eventEnd.clientY < ref.current.getBoundingClientRect().bottom\r\n      ) {\r\n        let x =\r\n          ref.current.getBoundingClientRect().left - leftPos + moveState.x;\r\n        let y = ref.current.getBoundingClientRect().top - topPos + moveState.y;\r\n\r\n        setTransition(transitionDuration);\r\n        moveElement(x, y);\r\n\r\n        dispatchMove({\r\n          type: ACTION_TYPE.CUSTOM,\r\n          payload: {\r\n            zIndex: 1,\r\n          },\r\n        });\r\n\r\n        setIndicator({ active: true, wrong: false });\r\n\r\n        setTimeout(() => {\r\n          setIndicator((prev) => {\r\n            return { ...prev, active: false };\r\n          });\r\n        }, 1000);\r\n\r\n        setIsDone(true);\r\n      } else {\r\n        resetElement(transitionDuration);\r\n\r\n        setTimeout(() => {\r\n          resetElement(0);\r\n        }, transitionDuration);\r\n      }\r\n\r\n      document.removeEventListener(\"mouseup\", mouseUp);\r\n    };\r\n\r\n    document.addEventListener(\"mouseup\", mouseUp);\r\n  };\r\n\r\n  return [\r\n    { ...moveState, isDone: isDone, indicator: indicator },\r\n    handleMove,\r\n    dispatchMove,\r\n  ];\r\n};\r\n\r\nexport default useMove;\r\n","import useMove from \"./../hook/useMove\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Indicator from \"./Indicator\";\r\n\r\nconst DragElement = ({\r\n  dropRef,\r\n  returnState = false,\r\n  customClass,\r\n  children,\r\n}) => {\r\n  const [elementState, handleMove] = useMove(dropRef);\r\n  const [indicator, setIndicator] = useState({ active: false, wrong: false });\r\n\r\n  useEffect(() => {\r\n    if (returnState) {\r\n      returnState(elementState);\r\n    }\r\n  }, [elementState, returnState]);\r\n\r\n  useEffect(() => {\r\n    setIndicator(elementState.indicator);\r\n  }, [elementState.indicator]);\r\n\r\n  return (\r\n    <>\r\n      <Indicator active={indicator.active} wrong={indicator.wrong} />\r\n      <div\r\n        className={`dragElement ${elementState.isDone && customClass}`}\r\n        style={{\r\n          left: elementState.x,\r\n          top: elementState.y,\r\n          transition: `${elementState.transition}ms`,\r\n          zIndex: elementState.zIndex,\r\n          position: \"relative\",\r\n        }}\r\n        onMouseDown={handleMove}\r\n      >\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragElement;\r\n","import { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport DetailsBox from \"./../UI/DetailsBox\";\r\nimport DragElement from \"./../UI/DragElement\";\r\n\r\nconst words = [\"Modalverben\", \"Perfekt\", \"Trennbare Verben\"];\r\n\r\nconst SecondPartBox = ({ secondPart }) => {\r\n  const lineRefs = [useRef(null), useRef(null), useRef(null)];\r\n\r\n  const [hide, setHide] = useState([0, 0, 0]);\r\n  const [isDone, setIsDone] = useState([false, false, false]);\r\n\r\n  const [ende, setEnde] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const setHideStatus = (index, status) => {\r\n      setHide((prev) => {\r\n        let arr = [...prev];\r\n        arr[index] = status;\r\n\r\n        return arr;\r\n      });\r\n    };\r\n    for (let i = 0; i < isDone.length; i++) {\r\n      if (isDone[i] && hide[i] === 0) {\r\n        for (let j = 0; j < isDone.length; j++) {\r\n          if (isDone[j]) {\r\n            setHideStatus(j, false);\r\n          }\r\n        }\r\n\r\n        setHideStatus(i, true);\r\n        setTimeout(() => {\r\n          setHideStatus(i, false);\r\n        }, 1500);\r\n      }\r\n    }\r\n  }, [isDone, hide]);\r\n\r\n  useEffect(() => {\r\n    let isEnd = true;\r\n\r\n    for (let i = 0; i < hide.length; i++) {\r\n      if (hide[i] !== false) {\r\n        isEnd = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    setEnde(isEnd);\r\n  }, [hide]);\r\n\r\n  return (\r\n    <div\r\n      className={`second-part-box ${secondPart ? \"box-animation\" : \"\"}`}\r\n      style={{\r\n        height: ende ? 170 : \"\",\r\n      }}\r\n    >\r\n      <div className=\"lines\">\r\n        <div className=\"line\">\r\n          1. Das <div ref={lineRefs[1]} className=\"blank\"></div> besteht aus\r\n          Hilfsverb und Partizip II.\r\n          {hide[1] === true && (\r\n            <DetailsBox>\r\n              Richtig! Hier ist ein Beispiel: <br />\r\n              Sie hat am Samstag dieses Buch gekauft.\r\n            </DetailsBox>\r\n          )}\r\n        </div>\r\n        <div className=\"line\">\r\n          2. <div ref={lineRefs[2]} className=\"blank\"></div> haben einen\r\n          Verbstamm und eine Vorsilbe.\r\n          {hide[2] === true && (\r\n            <DetailsBox>\r\n              Richtig! Hier ist ein Beispiel: <br />\r\n              Sie hat am Samstag dieses Buch gekauft.\r\n            </DetailsBox>\r\n          )}\r\n        </div>\r\n        <div className=\"line\">\r\n          3. <div ref={lineRefs[0]} className=\"blank\"></div> kommen mit einem\r\n          Infinitv im Satz vor.\r\n          {hide[0] === true && (\r\n            <DetailsBox>\r\n              Richtig! Hier ist ein Beispiel: <br />\r\n              Sie hat am Samstag dieses Buch gekauft.\r\n            </DetailsBox>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {useMemo(() => {\r\n        return (\r\n          <div className=\"options\">\r\n            {words.map((word, index) => (\r\n              <DragElement\r\n                key={word}\r\n                dropRef={lineRefs[index]}\r\n                customClass={\"green\"}\r\n                returnState={(state) => {\r\n                  if (isDone[index] === state.isDone) return;\r\n\r\n                  setIsDone((prev) => {\r\n                    let list = [...prev];\r\n\r\n                    list[index] = state.isDone;\r\n                    return list;\r\n                  });\r\n                }}\r\n              >\r\n                {word}\r\n              </DragElement>\r\n            ))}\r\n          </div>\r\n        );\r\n      }, [isDone])}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecondPartBox;\r\n","import DetailsBox from \"./DetailsBox\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\nconst BarCircle = ({ detailsText, children, color, onClick }) => {\r\n  const barCircleStyle = {\r\n    position: \"relative\",\r\n  };\r\n\r\n  const circleStyle = {\r\n    fontWeight: 700,\r\n    fontSize: 20,\r\n    height: 35,\r\n    width: 35,\r\n    borderRadius: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    transition: \"0.5s\",\r\n    backgroundColor: color,\r\n    color: \"#fff\",\r\n  };\r\n\r\n  let boxStyle = {\r\n    transform: \"rotate(180deg)\",\r\n    position: \"absolute\",\r\n    top: 60,\r\n    transition: \"0.5s\",\r\n  };\r\n\r\n  const [leftPos, setLeftPos] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const boxRef = useRef(null);\r\n\r\n  const [customCircleStyle, setCustomCircleStyle] = useState({\r\n    transform: \"scale(1)\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLeftPos((boxRef.current.getBoundingClientRect().width / 2 - 17.5) * -1);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bar-circle\" style={barCircleStyle}>\r\n      <div\r\n        className=\"circle\"\r\n        style={{ ...circleStyle, ...customCircleStyle }}\r\n        onMouseMove={() => {\r\n          setCustomCircleStyle({ transform: \"scale(1.1)\" });\r\n          setShow(true);\r\n        }}\r\n        onMouseOut={() => {\r\n          setCustomCircleStyle({ transform: \"scale(1)\" });\r\n          setShow(false);\r\n        }}\r\n        onClick={onClick}\r\n      >\r\n        {children}\r\n      </div>\r\n      <div\r\n        className=\"box\"\r\n        style={{\r\n          ...boxStyle,\r\n          left: leftPos,\r\n          opacity: show ? 1 : 0,\r\n        }}\r\n        ref={boxRef}\r\n      >\r\n        <DetailsBox width={\"max-content\"} backgroundColor={\"#788287\"}>\r\n          <p style={{ transform: \"rotate(180deg)\" }}>{detailsText}</p>\r\n        </DetailsBox>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarCircle;\r\n","import ReactDOM from \"react-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst InfoOverlay = ({ children, closeFunc }) => {\r\n  const infoOverlayStyle = {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    zIndex: 10000,\r\n    alignItems: \"center\",\r\n    transition: \"0.5s\",\r\n  };\r\n\r\n  const boxStyle = {\r\n    backgroundColor: \"#a0c814\",\r\n    width: \"max-content\",\r\n    height: \"max-content\",\r\n    padding: \"20px 25px\",\r\n    borderRadius: \"15px\",\r\n    position: \"relative\",\r\n    transition: \"0.2s\",\r\n    zIndex: \"10000\",\r\n  };\r\n\r\n  const titleStyle = {\r\n    color: \"#374105\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"15px\",\r\n  };\r\n\r\n  const textStyle = {\r\n    color: \"#fff\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const closeStyle = {\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n    top: \"0\",\r\n    backgroundColor: \"#85a70e\",\r\n    height: \"35px\",\r\n    width: \"35px\",\r\n    borderRadius: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    transition: \"transform 0.5s\",\r\n  };\r\n\r\n  const svgStyle = {\r\n    width: \"35%\",\r\n    marginLeft: \"5px\",\r\n  };\r\n\r\n  const [animateOverlay, setAnimateOverlay] = useState(false);\r\n  const [customBoxStyle, setCustomBoxStyle] = useState({\r\n    transform: \"scale(0.5)\",\r\n    opacity: 0,\r\n  });\r\n\r\n  const [customCloseStyle, setCustomCloseStyle] = useState({\r\n    transform: \"scale(1) translate(50%, -50%)\",\r\n    opacity: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setAnimateOverlay(true);\r\n    setCustomBoxStyle((prev) => {\r\n      return { ...prev, transform: \"scale(1.2)\", opacity: 1 };\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setCustomBoxStyle((prev) => {\r\n        return { ...prev, transform: \"scale(1)\" };\r\n      });\r\n\r\n      setTimeout(() => {\r\n        setCustomCloseStyle((prev) => {\r\n          return {\r\n            ...prev,\r\n            transform: \"scale(1.2) translate(50%, -50%)\",\r\n            opacity: 1,\r\n          };\r\n        });\r\n\r\n        setTimeout(() => {\r\n          setCustomCloseStyle((prev) => {\r\n            return { ...prev, transform: \"scale(1) translate(50%, -50%)\" };\r\n          });\r\n        }, 200);\r\n      }, 200);\r\n    }, 200);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    // setAnimateBox(false);\r\n    setTimeout(() => {\r\n      setCustomBoxStyle((prev) => {\r\n        return { ...prev, transform: \"scale(0.5)\", opacity: 0 };\r\n      });\r\n      setAnimateOverlay(false);\r\n\r\n      setTimeout(() => {\r\n        closeFunc();\r\n      }, 500);\r\n    }, 200);\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      className=\"info-overlay\"\r\n      style={{ ...infoOverlayStyle, opacity: animateOverlay ? \"1\" : \"0\" }}\r\n      onClick={handleClose}\r\n    >\r\n      <div\r\n        className=\"box\"\r\n        style={{\r\n          ...boxStyle,\r\n          ...customBoxStyle,\r\n        }}\r\n      >\r\n        <div className=\"title\" style={titleStyle}>\r\n          Aufgabe\r\n        </div>\r\n        <div className=\"text\" style={textStyle}>\r\n          {children}\r\n        </div>\r\n        <div\r\n          className=\"close\"\r\n          onClick={handleClose}\r\n          style={{ ...closeStyle, ...customCloseStyle }}\r\n          onMouseMove={() => {\r\n            setCustomCloseStyle({\r\n              transform: \"scale(1.1) translate(50%, -50%)\",\r\n            });\r\n          }}\r\n          onMouseOut={() => {\r\n            setCustomCloseStyle({\r\n              transform: \"scale(1) translate(50%, -50%)\",\r\n            });\r\n          }}\r\n        >\r\n          <svg\r\n            width=\"266\"\r\n            height=\"438\"\r\n            viewBox=\"0 0 266 438\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={svgStyle}\r\n          >\r\n            <path\r\n              d=\"M258.476 235.971L64.1319 430.314C54.7589 439.687 39.5629 439.687 30.1909 430.314L7.5239 407.647C-1.8331 398.29 -1.8511 383.125 7.4839 373.746L161.505 219L7.4839 64.255C-1.8511 54.876 -1.8331 39.711 7.5239 30.354L30.1909 7.68701C39.5639 -1.68599 54.7599 -1.68599 64.1319 7.68701L258.475 202.03C267.848 211.402 267.848 226.598 258.476 235.971Z\"\r\n              fill=\"white\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector(\"#info\")\r\n  );\r\n};\r\n\r\nexport default InfoOverlay;\r\n","import ReactDOM from \"react-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst HelpOverlay = ({ pos = false, closeOverlay }) => {\r\n  const helpOverlayStyle = {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    zIndex: 10000,\r\n    transition: \"0.5s\",\r\n  };\r\n\r\n  const svgStyle = {\r\n    height: \"50px\",\r\n    position: \"absolute\",\r\n    transition: \"1s\",\r\n    transitionTimingFunction: \"linear\",\r\n    zIndex: \"1000000000000000001\",\r\n    width: \"max-content\",\r\n    // opacity: \"0\",\r\n    pointerEvents: \"none\",\r\n  };\r\n\r\n  const [customSvgStyle, setCustomSvgStyle] = useState({\r\n    top: 90,\r\n    left: window.innerWidth - 80,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (pos === \"init\") {\r\n      closeOverlay();\r\n      setCustomSvgStyle({ top: 90, left: window.innerWidth - 80 });\r\n    }\r\n    if (pos[0] !== undefined) {\r\n      setCustomSvgStyle((prev) => {\r\n        return {\r\n          ...prev,\r\n          left: pos[0],\r\n          top: pos[1],\r\n        };\r\n      });\r\n    }\r\n  }, [pos, closeOverlay]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"help-overlay\" style={helpOverlayStyle}>\r\n      <div className=\"finger\">\r\n        <svg\r\n          width=\"384\"\r\n          height=\"512\"\r\n          viewBox=\"0 0 384 512\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          style={{ ...svgStyle, ...customSvgStyle }}\r\n        >\r\n          <g clipPath=\"url(#clip0_148:10)\">\r\n            <path\r\n              d=\"M135.652 0C159.277 0 179.478 20.65 179.478 44.8V144.651C196.526 128.311 229.244 126.305 250.422 150.95C273.251 136.662 303.439 148.803 312.737 167.4C361.878 158.426 384 189.346 384 240C384 242.746 383.797 253.276 383.805 256C383.973 317.971 352.74 332.894 345.49 379.731C343.683 391.404 333.599 400 321.786 400H150.261L150.26 399.998C131.894 399.987 114.371 389.391 106.415 371.534C93.421 342.648 57.377 276.122 29.092 264C10.897 256.203 0.00800419 242.616 4.18524e-06 224C-0.0139958 189.778 35.098 166.248 66.908 179.881C75.267 183.464 83.578 188.193 91.826 194.034V44.8C91.826 21.35 112.369 0 135.652 0ZM136 416H328C341.255 416 352 426.745 352 440V488C352 501.255 341.255 512 328 512H136C122.745 512 112 501.255 112 488V440C112 426.745 122.745 416 136 416ZM304 444C292.954 444 284 452.954 284 464C284 475.046 292.954 484 304 484C315.046 484 324 475.046 324 464C324 452.954 315.046 444 304 444Z\"\r\n              fill=\"white\"\r\n            />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0_148:10\">\r\n              <rect width=\"384\" height=\"512\" fill=\"white\" />\r\n            </clipPath>\r\n          </defs>\r\n        </svg>\r\n      </div>\r\n    </div>,\r\n    document.querySelector(\"#help\")\r\n  );\r\n};\r\n\r\nexport default HelpOverlay;\r\n","import BarCircle from \"./BarCircle\";\r\nimport InfoOverlay from \"./InfoOverlay\";\r\nimport { useState } from \"react\";\r\nimport HelpOverlay from \"./HelpOverlay\";\r\n\r\nconst StatusBar = ({\r\n  infoText,\r\n  infoOverlay,\r\n  setInfoOverlay = () => {},\r\n  setHelpOverlay = () => {},\r\n  helpFingerPosition,\r\n}) => {\r\n  let barStyle = {\r\n    position: \"absolute\",\r\n    right: 50,\r\n    top: 80,\r\n    display: \"flex\",\r\n    gap: 15,\r\n  };\r\n\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showHelp, setShowHelp] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"status-bar\" style={barStyle}>\r\n        <BarCircle\r\n          detailsText={\"Information\"}\r\n          color={\"#a0c814\"}\r\n          onClick={() => setShowInfo(true)}\r\n        >\r\n          i\r\n        </BarCircle>\r\n        <BarCircle\r\n          detailsText={\"Hilfe\"}\r\n          color={\"#5ac8f5\"}\r\n          onClick={() => {\r\n            setHelpOverlay(true);\r\n            setShowHelp(true);\r\n          }}\r\n        >\r\n          ?\r\n        </BarCircle>\r\n      </div>\r\n      {(showInfo || infoOverlay) && (\r\n        <InfoOverlay\r\n          closeFunc={() => {\r\n            setInfoOverlay(false);\r\n            setShowInfo(false);\r\n          }}\r\n        >\r\n          {infoText}\r\n        </InfoOverlay>\r\n      )}\r\n\r\n      {showHelp && (\r\n        <HelpOverlay\r\n          pos={helpFingerPosition}\r\n          closeOverlay={() => {\r\n            setHelpOverlay(false);\r\n            setShowHelp(false);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusBar;\r\n","import Image from \"../assets/img/asset1.svg\";\r\nimport Image2 from \"../assets/img/asset2.svg\";\r\n\r\nimport \"../css/game1.css\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport BallsGroup from \"./BallsGroup\";\r\nimport SecondPartBox from \"./SecondPartBox\";\r\nimport StatusBar from \"./../UI/StatusBar\";\r\n\r\nconst list = [\r\n  {\r\n    textList: [\r\n      { text: \"Mein Bruder\" },\r\n      { text: \"steht\" },\r\n      { text: \"immer\" },\r\n      { text: \"früh\" },\r\n      { text: \"auf.\" },\r\n    ],\r\n    verbs: [1, 4],\r\n    containerIndex: 0,\r\n    lineIndex: 0,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Meine Schwes- ter\" },\r\n      { text: \"kann\" },\r\n      { text: \"schöne Bilder\" },\r\n      { text: \"malen.\" },\r\n    ],\r\n    verbs: [1, 3],\r\n    containerIndex: 1,\r\n    lineIndex: 0,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Peter\" },\r\n      { text: \"ruft\" },\r\n      { text: \"seine Oma\" },\r\n      { text: \"oft\" },\r\n      { text: \"an.\" },\r\n    ],\r\n    verbs: [1, 4],\r\n    containerIndex: 0,\r\n    lineIndex: 1,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Herr Schmidt\" },\r\n      { text: \"ist\" },\r\n      { text: \"zu spät\" },\r\n      { text: \"ins Büro\" },\r\n      { text: \"gekom- men.\" },\r\n    ],\r\n    verbs: [1, 4],\r\n    containerIndex: 2,\r\n    lineIndex: 0,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Das Kind\" },\r\n      { text: \"will\" },\r\n      { text: \"Fußball\" },\r\n      { text: \"spielen.\" },\r\n    ],\r\n    verbs: [1, 3],\r\n    containerIndex: 1,\r\n    lineIndex: 1,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Sie\" },\r\n      { text: \"hat\" },\r\n      { text: \"am Samstag\" },\r\n      { text: \"dieses Buch\" },\r\n      { text: \"gekauft.\" },\r\n    ],\r\n    verbs: [1, 4],\r\n    containerIndex: 2,\r\n    lineIndex: 1,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Er\" },\r\n      { text: \"muss\" },\r\n      { text: \"eine\" },\r\n      { text: \"neue Regel\" },\r\n      { text: \"lernen.\" },\r\n    ],\r\n    verbs: [1, 4],\r\n    containerIndex: 1,\r\n    lineIndex: 2,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Maria\" },\r\n      { text: \"macht\" },\r\n      { text: \"die Tür\" },\r\n      { text: \"zu.\" },\r\n    ],\r\n    verbs: [1, 3],\r\n    containerIndex: 0,\r\n    lineIndex: 2,\r\n  },\r\n  {\r\n    textList: [\r\n      { text: \"Mein Nachbar\" },\r\n      { text: \"hat\" },\r\n      { text: \"noch nie\" },\r\n      { text: \"ein Buch\" },\r\n      { text: \"gelesen.\" },\r\n    ],\r\n    verbs: [1, 4],\r\n    containerIndex: 2,\r\n    lineIndex: 2,\r\n  },\r\n];\r\n\r\nlet initState = [];\r\n\r\nfor (let index in list) {\r\n  if (Number(index) === 0) {\r\n    initState[index] = {\r\n      line: false,\r\n    };\r\n  } else {\r\n    initState[index] = {\r\n      line: true,\r\n    };\r\n  }\r\n}\r\n\r\nconst Game1 = () => {\r\n  const leftDropArea = useRef(null);\r\n  const centerDropArea = useRef(null);\r\n  const rightDropArea = useRef(null);\r\n\r\n  const blueDropRef = useRef(null);\r\n\r\n  const [opacityList, setOpacityList] = useState(initState);\r\n  const [secondPart, setSecondPart] = useState(false);\r\n  const [infoOverlay, setInfoOverlay] = useState(true);\r\n  const [infoText, setInfoText] = useState(\r\n    <p>\r\n      Ziehe die Verben aus dem Satz <br />\r\n      und leg sie in den richtigen Kasten.\r\n      <br />\r\n      Weißt du die Antwort nicht? <br />\r\n      Dann leg die Verben auf das Fragezeichen.\r\n    </p>\r\n  );\r\n  const [helpOverlay, setHelpOverlay] = useState(false);\r\n  const [helpMove, setHelpMove] = useState(false);\r\n  const [helpFingerPosition, setHelpFingerPosition] = useState([]);\r\n  const [level, setLevel] = useState(0);\r\n  const [, setBallPos] = useState([]);\r\n\r\n  const returnDone = (opacity, index) => {\r\n    if (index === list.length) {\r\n      setInfoText(\r\n        <p>\r\n          Manchmal gibt es im Satz zwei Verben oder ein Verb <br /> aus zwei\r\n          Teilen.\r\n          <br />\r\n          Drei Typen sind besonders wichtig. Ziehe die Wörter <br /> in die\r\n          Lücken.\r\n        </p>\r\n      );\r\n      setInfoOverlay(true);\r\n\r\n      setSecondPart(true);\r\n    } else {\r\n      setOpacityList((prev) => {\r\n        const list = [...prev];\r\n        list[index] = opacity;\r\n\r\n        return list;\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (helpOverlay) {\r\n      setHelpMove(true);\r\n    }\r\n  }, [helpOverlay]);\r\n\r\n  // useEffect(() => {\r\n  //   let index;\r\n  //   for (let i = 0; i < opacityList.length; i++) {\r\n  //     if (!opacityList[i].word) {\r\n  //       index = i;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n\r\n  //   setLevel(index);\r\n  // }, [opacityList]);\r\n\r\n  return (\r\n    <>\r\n      <StatusBar\r\n        infoText={infoText}\r\n        infoOverlay={infoOverlay}\r\n        setInfoOverlay={setInfoOverlay}\r\n        setHelpOverlay={setHelpOverlay}\r\n        helpFingerPosition={helpFingerPosition}\r\n      />\r\n      <div className=\"game1\">\r\n        {list.map((item, index) => {\r\n          return (\r\n            <BallsGroup\r\n              key={index}\r\n              refList={[leftDropArea, centerDropArea, rightDropArea]}\r\n              containerIndex={item.containerIndex}\r\n              blueDropRef={blueDropRef}\r\n              verbID1={item.verbs[0]}\r\n              verbID2={item.verbs[1]}\r\n              list={item.textList}\r\n              lineOpacity={opacityList[index].line}\r\n              returnDone={returnDone}\r\n              index={index}\r\n              lineIndex={item.lineIndex}\r\n              secondPart={secondPart}\r\n              returnBallPos={setBallPos}\r\n              helpMove={helpMove}\r\n              moveFinger={setHelpFingerPosition}\r\n              level={level}\r\n              setHelpMove={setHelpMove}\r\n              setLevel={setLevel}\r\n            />\r\n          );\r\n        })}\r\n        <div className={`images ${secondPart ? \"secondPart\" : \"\"}`}>\r\n          <img src={Image} alt=\"\" />\r\n          <img className=\"image2\" src={Image2} alt=\"\" />\r\n          <div ref={blueDropRef} className=\"blue-circle\">\r\n            ?\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`drop-area ${secondPart ? \"secondPart-drop\" : \"\"}`}>\r\n          <div ref={leftDropArea} className=\"container\">\r\n            <div className=\"title\">trennbare Verben</div>\r\n          </div>\r\n          <div ref={centerDropArea} className=\"container\">\r\n            <div className=\"title\">Modalverben</div>\r\n          </div>\r\n          <div ref={rightDropArea} className=\"container\">\r\n            <div className=\"title\">Perfekt</div>\r\n          </div>\r\n        </div>\r\n\r\n        <SecondPartBox secondPart={secondPart} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n","import React, { useEffect, createRef } from \"react\";\r\nimport \"./css/general.css\";\r\n// import Menu from \"./menu/menu\";\r\nimport Game1 from \"./game1/Game1\";\r\n\r\nfunction App() {\r\n  // const [navMenuItem, setNavMenuItem] = useState(0);\r\n  // const [load, setLoad] = useState(false);\r\n  // const menuRef = useRef(null);\r\n\r\n  const navButtonRef = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    navButtonRef[i] = createRef();\r\n  }\r\n\r\n  setTimeout(() => {\r\n    // setLoad(true);\r\n  }, 1000);\r\n\r\n  useEffect(() => {\r\n    document\r\n      .querySelector('meta[name=\"viewport\"]')\r\n      .setAttribute(\"content\", \"width=1000\", \"initial-scale=1\");\r\n\r\n    document.firstElementChild.style.zoom = 1;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Menu\r\n        navMenuItem={navMenuItem}\r\n        setNavMenuItem={setNavMenuItem}\r\n        navButtonRef={navButtonRef}\r\n        menuRef={menuRef}\r\n      /> */}\r\n\r\n      {/* {navMenuItem === 0 && <Game1 />} */}\r\n\r\n      <Game1 />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}